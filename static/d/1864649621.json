{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"List"},"id":"9627dbb3-38af-5e1b-9b43-0c48404b2828","html":"<p>Connecting to a SharePoint List</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> spql <span class=\"token keyword\">from</span> <span class=\"token string\">'spql'</span>\n\n<span class=\"token keyword\">const</span> SPSite <span class=\"token operator\">=</span> spql<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>siteUrl<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> SPList <span class=\"token operator\">=</span> SPSite<span class=\"token punctuation\">.</span><span class=\"token function\">List</span><span class=\"token punctuation\">(</span>listName<span class=\"token operator\">|</span>listGUID<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>getSchema()</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">SPList<span class=\"token punctuation\">.</span><span class=\"token function\">getSchema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// => {Promise,&lt;Object>} The List Info {id, name, sitUrl, description, createdBy, created, modified, itemCount, defaultViewUrl, isDocumentList, isHidden}</span>\n<span class=\"token comment\">// and Field Info {displayName, staticName, description, type, isHidden, isReadOnly, isFormBaseType, ?[choice], ?{lookup}}</span></code></pre></div>\n<h2>count()</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">SPList<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">?</span>where<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// => {Promise,&lt;number>} The amount of records</span></code></pre></div>\n<p><strong>where</strong></p>\n<p>CAML (e.g. <Eq><FieldRef Name=\"staticName\" /><Value Type=\"fieldType\">{value}</Value></Eq>) *spql.Caml</p>\n<h2>all()</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">SPList<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  select<span class=\"token punctuation\">,</span>\n  orderBy<span class=\"token punctuation\">,</span>\n  maxResults\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// => {Promise,&lt;Array>} Record results {name: value}</span></code></pre></div>\n<p><strong>select</strong></p>\n<p>Field|[Field]</p>\n<p><strong>Field</strong></p>\n<p>fieldName|{staticName, alias, type, mapFn}</p>\n<p><strong>orderBy</strong></p>\n<p>OrderByField|[OrderByField]</p>\n<p><strong>OrderByField</strong></p>\n<p>fieldName|{staticName, isAscending}</p>\n<p><strong>maxResults</strong></p>\n<p>Limit amount of returned records</p>\n<h2>find()</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">SPList<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  select<span class=\"token punctuation\">,</span>\n  where<span class=\"token punctuation\">,</span>\n  orderBy<span class=\"token punctuation\">,</span>\n  maxResults\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// => {Promise,&lt;Array>} Record results {name: value}</span></code></pre></div>\n<p><strong>select</strong></p>\n<p>Field|[Field]</p>\n<p><strong>Field</strong></p>\n<p>fieldName|{staticName, alias, type, mapFn}</p>\n<p><strong>where</strong></p>\n<p>CAML (e.g. <Eq><FieldRef Name=\"staticName\" /><Value Type=\"fieldType\">{value}</Value></Eq>) *spql.Caml</p>\n<p><strong>orderBy</strong></p>\n<p>OrderByField|[OrderByField]</p>\n<p><strong>OrderByField</strong></p>\n<p>fieldName|{staticName, isAscending}</p>\n<p><strong>maxResults</strong></p>\n<p>Limit amount of returned records</p>\n<h2>findOne()</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">SPList<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  select<span class=\"token punctuation\">,</span>\n  where\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// => {Promise,&lt;?Object>} Record result {name: value}</span></code></pre></div>\n<p><strong>select</strong></p>\n<p>Field|[Field]</p>\n<p><strong>Field</strong></p>\n<p>fieldName|{staticName, alias, type, mapFn}</p>\n<p><strong>where</strong></p>\n<p>CAML (e.g. <Eq><FieldRef Name=\"staticName\" /><Value Type=\"fieldType\">{value}</Value></Eq>) **spql.Caml</p>\n<h2>findById()</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">SPList<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">,</span>\n  select\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// => {Promise,&lt;?Object>} Record result {name: value}</span></code></pre></div>\n<p><strong>select</strong></p>\n<p>Field|[Field]</p>\n<p><strong>Field</strong></p>\n<p>fieldName|{staticName, alias, type, mapFn}</p>\n<h2>create()</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">SPList<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>NewItem<span class=\"token operator\">|</span><span class=\"token punctuation\">[</span>NewItems<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// => {Promise,&lt;Array|Object>} Results {id, isSuccess, error}</span></code></pre></div>\n<p><strong>NewItem</strong></p>\n<p>{staticName: value}</p>\n<h2>updateById()</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">SPList<span class=\"token punctuation\">.</span><span class=\"token function\">updateById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> Updates<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// => {Promise,&lt;Object>} Results {id, isSuccess, error}</span></code></pre></div>\n<p><strong>Updates</strong></p>\n<p>{staticName: value}</p>\n<h2>deleteById()</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">SPList<span class=\"token punctuation\">.</span><span class=\"token function\">deleteById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// => {Promise,&lt;Object>} Results {id, isSuccess, error}</span></code></pre></div>"}}]}}}