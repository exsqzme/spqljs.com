(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{150:function(a,n,s){"use strict";s.r(n);var t=s(9),e=(s(0),s(157)),o=s(155),p=s(160),c=s(151),i={name:"1hqmogc",styles:"& h2{color:#ff7e5f;font-family:'Source Code Pro', monospace;}"},r="1147515358",l=function(){return Object(t.b)(c.b,{query:r,render:function(a){return a.allMarkdownRemark.edges.map(function(a){return Object(t.b)("div",{key:a.node.id},Object(t.b)("h1",null,a.node.frontmatter.title),Object(t.b)("div",{css:i,dangerouslySetInnerHTML:{__html:a.node.html}}))})},data:p})},u=s(161),d={name:"1hqmogc",styles:"& h2{color:#ff7e5f;font-family:'Source Code Pro', monospace;}"},g="1864649621",m=function(){return Object(t.b)(c.b,{query:g,render:function(a){return a.allMarkdownRemark.edges.map(function(a){return Object(t.b)("div",{key:a.node.id},Object(t.b)("h1",null,a.node.frontmatter.title),Object(t.b)("div",{css:d,dangerouslySetInnerHTML:{__html:a.node.html}}))})},data:u})};n.default=function(){return Object(t.b)(e.a,null,Object(t.b)(o.a,{title:"SPQL API"}),Object(t.b)(l,null),Object(t.b)(m,null))}},151:function(a,n,s){"use strict";s.d(n,"b",function(){return u});var t=s(9),e=s(0),o=s.n(e),p=s(4),c=s.n(p),i=s(35),r=s.n(i);s.d(n,"a",function(){return r.a});s(152);var l=o.a.createContext({}),u=function(a){return Object(t.b)(l.Consumer,null,function(n){return a.data||n[a.query]&&n[a.query].data?(a.render||a.children)(a.data?a.data.data:n[a.query].data):Object(t.b)("div",null,"Loading (StaticQuery)")})};u.propTypes={data:c.a.object,query:c.a.string.isRequired,render:c.a.func,children:c.a.func}},152:function(a,n,s){var t;a.exports=(t=s(154))&&t.default||t},153:function(a){a.exports={data:{site:{siteMetadata:{title:"SPQL"}}}}},154:function(a,n,s){"use strict";s.r(n);s(57);var t=s(0),e=s.n(t),o=s(4),p=s.n(o),c=s(58),i=s(2),r=function(a){var n=a.location,s=i.default.getResourcesForPathnameSync(n.pathname);return e.a.createElement(c.a,Object.assign({location:n,pageResources:s},s.json))};r.propTypes={location:p.a.shape({pathname:p.a.string.isRequired}).isRequired},n.default=r},155:function(a,n,s){"use strict";var t=s(9),e=s(156),o=(s(0),s(4)),p=s.n(o),c=s(159),i=s.n(c),r=s(151);function l(a){var n=a.description,s=a.lang,o=a.meta,p=a.keywords,c=a.title;return Object(t.b)(r.b,{query:u,render:function(a){var e=n||a.site.siteMetadata.description;return Object(t.b)(i.a,{htmlAttributes:{lang:s},title:c,titleTemplate:"%s | "+a.site.siteMetadata.title,meta:[{name:"description",content:e},{property:"og:title",content:c},{property:"og:description",content:e},{property:"og:type",content:"website"},{name:"twitter:card",content:"summary"},{name:"twitter:creator",content:a.site.siteMetadata.author},{name:"twitter:title",content:c},{name:"twitter:description",content:e}].concat(p.length>0?{name:"keywords",content:p.join(", ")}:[]).concat(o)})},data:e})}l.defaultProps={lang:"en",meta:[],keywords:[]},l.propTypes={description:p.a.string,lang:p.a.string,meta:p.a.array,keywords:p.a.arrayOf(p.a.string),title:p.a.string.isRequired},n.a=l;var u="1025518380"},156:function(a){a.exports={data:{site:{siteMetadata:{title:"SPQL",description:"Kick off your next, great Gatsby project with this default starter. This barebones starter ships with the main Gatsby configuration files you might need.",author:"@michaelaldave"}}}}},157:function(a,n,s){"use strict";var t=s(9),e=s(153),o=s(0),p=s.n(o),c=s(4),i=s.n(c),r=s(151),l=s(27),u={name:"ifnyry",styles:"height:50px;box-shadow:inset 0 -1px 0 0px rgba(0, 0, 0, 0.1);position:fixed;top:0;width:100%;background:#fff;"},d={name:"wi2fqu",styles:"display:inline-block;flex:1;"},g={name:"yy3s1s",styles:"list-style:none;margin:0;display:flex;"},m={name:"0",styles:""},k={name:"1p0tbhj",styles:"text-decoration:none;color:#282936;&:hover{color:#ff7e5f;opacity:.8;}margin:0 1.5em;font-size:20px;"},h={name:"0",styles:""},f={name:"ojo7v7",styles:"text-decoration:none;color:#282936;&:hover{color:#ff7e5f;opacity:.8;}flex:1;font-size:20px;"},v=function(a){var n=a.siteTitle;return Object(t.b)("header",{css:u},Object(t.b)("div",{css:Object(l.a)({display:"flex",alignItems:"center",margin:"0 auto",maxWidth:1200,padding:"0 1rem",height:"100%"})},Object(t.b)(r.a,{to:"/",style:{color:"#ff7e5f",textDecoration:"none",fontSize:"33px"}},n),Object(t.b)("nav",{css:d},Object(t.b)("ul",{css:g},Object(t.b)("li",{css:m},Object(t.b)(r.a,{to:"/getting-started",css:k,activeStyle:{color:"#ff7e5f"}},"Getting Started")),Object(t.b)("li",{css:h},Object(t.b)(r.a,{to:"/docs",css:f,activeStyle:{color:"#ff7e5f"}},"Docs"))))))};v.propTypes={siteTitle:i.a.string},v.defaultProps={siteTitle:""};var b=v,y=(s(158),{name:"7gjsnz",styles:'@import url(\'https://fonts.googleapis.com/css?family=Source+Code+Pro|family=Source+Sans+Pro\');html{font:calc(1vw + 0.5em) \'Source Sans Pro\',sans-serif;box-sizing:border-box;overflow-y:scroll;color:#282936;}body{margin:0;margin-top:50px;}*{box-sizing:inherit;}*:before{box-sizing:inherit;}*:after{box-sizing:inherit;}pre{margin-left:0;margin-right:0;margin-top:0;margin-bottom:1.45rem;font-size:0.85rem;line-height:1.42;background:hsla(0,0%,0%,0.04);border-radius:3px;overflow:auto;word-wrap:normal;padding:.5rem 1rem !important;}code{font-size:0.8rem;padding:.5rem line-height:1.45rem;}code{background-color:hsla(0,0%,0%,0.04);border-radius:3px;font-family:"SFMono-Regular",Consolas,"Roboto Mono","Droid Sans Mono","Liberation Mono",Menlo,Courier,monospace;padding:0;padding-top:0.2em;padding-bottom:0.2em;}pre code{background:none;line-height:1.42;}code:before,code:after,tt:before,tt:after{letter-spacing:-0.2em;content:" ";}pre code:before,pre code:after,pre tt:before,pre tt:after{content:"";}h1{font-size:2.2rem;}h2{font-size:1.6rem;font-weight:500;margin-bottom:.6em;}'}),j=function(a){var n=a.children;return Object(t.b)(r.b,{query:"755544856",render:function(a){return Object(t.b)(p.a.Fragment,null,Object(t.b)(t.a,{styles:y}),Object(t.b)(b,{siteTitle:a.site.siteMetadata.title}),Object(t.b)("div",{style:{margin:"0 auto",maxWidth:1200,padding:"1.0875rem 1.45rem"}},Object(t.b)("main",null,n)))},data:e})};j.propTypes={children:i.a.node.isRequired};n.a=j},160:function(a){a.exports={data:{allMarkdownRemark:{edges:[{node:{frontmatter:{title:"Site"},id:"796f9c65-8fdb-5ebc-9914-491a8a83cf76",html:'<p>Connecting to a SharePoint Site</p>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">import</span> spql <span class="token keyword">from</span> <span class="token string">\'spql\'</span>\n\n<span class="token keyword">const</span> SPSite <span class="token operator">=</span> spql<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span></code></pre></div>\n<h2>getListCollectionInfo()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPSite<span class="token punctuation">.</span><span class="token function">getListCollectionInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Array>} The Site\'s List Info {id, name, siteUrl, description, createdBy, created, modified, itemCount, defaultViewUrl, isDocumentList, isHidden}</span></code></pre></div>\n<h2>uploadDocument()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPSite<span class="token punctuation">.</span><span class="token function">uploadDocument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  fileStream<span class="token punctuation">:</span> <span class="token punctuation">[</span>Bytes<span class="token punctuation">]</span><span class="token punctuation">,</span>\n  fileName<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n  destination<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n  fields<span class="token punctuation">:</span> <span class="token punctuation">[</span>Field<span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Object>} Results {isSuccess, error}</span></code></pre></div>\n<p>Uploads a document to a document libary under the site.</p>\n<p><strong>Field</strong></p>\n<p>{displayName, staticName, type, value}</p>\n<h2>getUserById()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPSite<span class="token punctuation">.</span><span class="token function">getUserById</span><span class="token punctuation">(</span>UserID<span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;?Object>} The User {id, account, displayName, email}</span></code></pre></div>\n<h2>getCurrentUser()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPSite<span class="token punctuation">.</span><span class="token function">getCurrentUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;?Object>} The Current User {id, account, displayName, email}</span></code></pre></div>\n<h2>getGroupsFromUser()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPSite<span class="token punctuation">.</span><span class="token function">getGroupsFromUser</span><span class="token punctuation">(</span>userLoginName<span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Array>} The User\'s Groups {id, name, description}</span></code></pre></div>\n<h2>getUsersInGroup()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPSite<span class="token punctuation">.</span><span class="token function">getUsersInGroup</span><span class="token punctuation">(</span>groupName<span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Array>} The Users in Group {id, account, displayName, email}</span></code></pre></div>\n<h2>createGroup()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPSite<span class="token punctuation">.</span><span class="token function">createGroup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  name<span class="token punctuation">,</span>\n  description<span class="token punctuation">,</span>\n  ownerLoginName<span class="token punctuation">,</span>\n  ownerIsGroup<span class="token punctuation">,</span>\n  defaultUserLoginName\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Object>} Results {isSuccess, error}</span></code></pre></div>\n<h2>deleteGroup()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPSite<span class="token punctuation">.</span><span class="token function">deleteGroup</span><span class="token punctuation">(</span>groupName<span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Object>} Results {isSuccess, error}</span></code></pre></div>\n<h2>addUsersToGroup()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPSite<span class="token punctuation">.</span><span class="token function">addUserToGroup</span><span class="token punctuation">(</span>groupName<span class="token punctuation">,</span> userLoginName<span class="token operator">|</span><span class="token punctuation">[</span>userLoginName<span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Object>} Results {isSuccess, error}</span></code></pre></div>\n<h2>deleteUsersFromGroup()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPSite<span class="token punctuation">.</span><span class="token function">deleteUserFromGroup</span><span class="token punctuation">(</span>groupName<span class="token punctuation">,</span> userLoginName<span class="token operator">|</span><span class="token punctuation">[</span>userLoginName<span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Object>} Results {isSuccess, error}</span></code></pre></div>\n<h2>isUserInGroup()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPSite<span class="token punctuation">.</span><span class="token function">isUserInGroup</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> groupId<span class="token operator">|</span><span class="token punctuation">[</span>groupId<span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;boolean>}</span></code></pre></div>\n<h2>isCurrentUserInGroup()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPSite<span class="token punctuation">.</span><span class="token function">isCurrentUserInGroup</span><span class="token punctuation">(</span>groupId<span class="token operator">|</span><span class="token punctuation">[</span>groupId<span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;boolean>}</span></code></pre></div>'}}]}}}},161:function(a){a.exports={data:{allMarkdownRemark:{edges:[{node:{frontmatter:{title:"List"},id:"9627dbb3-38af-5e1b-9b43-0c48404b2828",html:'<p>Connecting to a SharePoint List</p>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">import</span> spql <span class="token keyword">from</span> <span class="token string">\'spql\'</span>\n\n<span class="token keyword">const</span> SPSite <span class="token operator">=</span> spql<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>siteUrl<span class="token punctuation">)</span>\n<span class="token keyword">const</span> SPList <span class="token operator">=</span> SPSite<span class="token punctuation">.</span><span class="token function">List</span><span class="token punctuation">(</span>listName<span class="token operator">|</span>listGUID<span class="token punctuation">)</span></code></pre></div>\n<h2>getSchema()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">getSchema</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Object>} The List Info {id, name, sitUrl, description, createdBy, created, modified, itemCount, defaultViewUrl, isDocumentList, isHidden}</span>\n<span class="token comment">// and Field Info {displayName, staticName, description, type, isHidden, isReadOnly, isFormBaseType, ?[choice], ?{lookup}}</span></code></pre></div>\n<h2>count()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">?</span>where<span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;number>} The amount of records</span></code></pre></div>\n<p><strong>where</strong></p>\n<p>CAML (e.g. <Eq><FieldRef Name="staticName" /><Value Type="fieldType">{value}</Value></Eq>) *spql.Caml</p>\n<h2>all()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  select<span class="token punctuation">,</span>\n  orderBy<span class="token punctuation">,</span>\n  maxResults\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Array>} Record results {name: value}</span></code></pre></div>\n<p><strong>select</strong></p>\n<p>Field|[Field]</p>\n<p><strong>Field</strong></p>\n<p>fieldName|{staticName, alias, type, mapFn}</p>\n<p><strong>orderBy</strong></p>\n<p>OrderByField|[OrderByField]</p>\n<p><strong>OrderByField</strong></p>\n<p>fieldName|{staticName, isAscending}</p>\n<p><strong>maxResults</strong></p>\n<p>Limit amount of returned records</p>\n<h2>find()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  select<span class="token punctuation">,</span>\n  where<span class="token punctuation">,</span>\n  orderBy<span class="token punctuation">,</span>\n  maxResults\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Array>} Record results {name: value}</span></code></pre></div>\n<p><strong>select</strong></p>\n<p>Field|[Field]</p>\n<p><strong>Field</strong></p>\n<p>fieldName|{staticName, alias, type, mapFn}</p>\n<p><strong>where</strong></p>\n<p>CAML (e.g. <Eq><FieldRef Name="staticName" /><Value Type="fieldType">{value}</Value></Eq>) *spql.Caml</p>\n<p><strong>orderBy</strong></p>\n<p>OrderByField|[OrderByField]</p>\n<p><strong>OrderByField</strong></p>\n<p>fieldName|{staticName, isAscending}</p>\n<p><strong>maxResults</strong></p>\n<p>Limit amount of returned records</p>\n<h2>findOne()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  select<span class="token punctuation">,</span>\n  where\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;?Object>} Record result {name: value}</span></code></pre></div>\n<p><strong>select</strong></p>\n<p>Field|[Field]</p>\n<p><strong>Field</strong></p>\n<p>fieldName|{staticName, alias, type, mapFn}</p>\n<p><strong>where</strong></p>\n<p>CAML (e.g. <Eq><FieldRef Name="staticName" /><Value Type="fieldType">{value}</Value></Eq>) **spql.Caml</p>\n<h2>findById()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  id<span class="token punctuation">,</span>\n  select\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;?Object>} Record result {name: value}</span></code></pre></div>\n<p><strong>select</strong></p>\n<p>Field|[Field]</p>\n<p><strong>Field</strong></p>\n<p>fieldName|{staticName, alias, type, mapFn}</p>\n<h2>create()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>NewItem<span class="token operator">|</span><span class="token punctuation">[</span>NewItems<span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Array|Object>} Results {id, isSuccess, error}</span></code></pre></div>\n<p><strong>NewItem</strong></p>\n<p>{staticName: value}</p>\n<h2>updateById()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> Updates<span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Object>} Results {id, isSuccess, error}</span></code></pre></div>\n<p><strong>Updates</strong></p>\n<p>{staticName: value}</p>\n<h2>deleteById()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Object>} Results {id, isSuccess, error}</span></code></pre></div>'}}]}}}}}]);
//# sourceMappingURL=component---src-pages-docs-index-js-3a9d336b566f0697fa96.js.map