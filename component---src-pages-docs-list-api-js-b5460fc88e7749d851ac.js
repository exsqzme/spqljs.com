(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{145:function(n,a,t){"use strict";t.r(a);var e=t(9),s=t(161),o=(t(0),t(151)),i=t(157),p=t(155),c="1864649621";a.default=function(){return Object(e.b)(i.a,null,Object(e.b)(p.a,{title:"SPQL API"}),Object(e.b)(o.b,{query:c,render:function(n){return n.allMarkdownRemark.edges.map(function(n){return Object(e.b)("div",{key:n.node.id},Object(e.b)("h1",null,n.node.frontmatter.title),Object(e.b)("div",{dangerouslySetInnerHTML:{__html:n.node.html}}))})},data:s}))}},151:function(n,a,t){"use strict";t.d(a,"b",function(){return u});var e=t(9),s=t(0),o=t.n(s),i=t(4),p=t.n(i),c=t(35),r=t.n(c);t.d(a,"a",function(){return r.a});t(152);var l=o.a.createContext({}),u=function(n){return Object(e.b)(l.Consumer,null,function(a){return n.data||a[n.query]&&a[n.query].data?(n.render||n.children)(n.data?n.data.data:a[n.query].data):Object(e.b)("div",null,"Loading (StaticQuery)")})};u.propTypes={data:p.a.object,query:p.a.string.isRequired,render:p.a.func,children:p.a.func}},152:function(n,a,t){var e;n.exports=(e=t(154))&&e.default||e},153:function(n){n.exports={data:{site:{siteMetadata:{title:"SPQL"}}}}},154:function(n,a,t){"use strict";t.r(a);t(57);var e=t(0),s=t.n(e),o=t(4),i=t.n(o),p=t(58),c=t(2),r=function(n){var a=n.location,t=c.default.getResourcesForPathnameSync(a.pathname);return s.a.createElement(p.a,Object.assign({location:a,pageResources:t},t.json))};r.propTypes={location:i.a.shape({pathname:i.a.string.isRequired}).isRequired},a.default=r},155:function(n,a,t){"use strict";var e=t(9),s=t(156),o=(t(0),t(4)),i=t.n(o),p=t(159),c=t.n(p),r=t(151);function l(n){var a=n.description,t=n.lang,o=n.meta,i=n.keywords,p=n.title;return Object(e.b)(r.b,{query:u,render:function(n){var s=a||n.site.siteMetadata.description;return Object(e.b)(c.a,{htmlAttributes:{lang:t},title:p,titleTemplate:"%s | "+n.site.siteMetadata.title,meta:[{name:"description",content:s},{property:"og:title",content:p},{property:"og:description",content:s},{property:"og:type",content:"website"},{name:"twitter:card",content:"summary"},{name:"twitter:creator",content:n.site.siteMetadata.author},{name:"twitter:title",content:p},{name:"twitter:description",content:s}].concat(i.length>0?{name:"keywords",content:i.join(", ")}:[]).concat(o)})},data:s})}l.defaultProps={lang:"en",meta:[],keywords:[]},l.propTypes={description:i.a.string,lang:i.a.string,meta:i.a.array,keywords:i.a.arrayOf(i.a.string),title:i.a.string.isRequired},a.a=l;var u="1025518380"},156:function(n){n.exports={data:{site:{siteMetadata:{title:"SPQL",description:"Kick off your next, great Gatsby project with this default starter. This barebones starter ships with the main Gatsby configuration files you might need.",author:"@michaelaldave"}}}}},157:function(n,a,t){"use strict";var e=t(9),s=t(153),o=t(0),i=t.n(o),p=t(4),c=t.n(p),r=t(151),l=t(27),u={name:"ifnyry",styles:"height:50px;box-shadow:inset 0 -1px 0 0px rgba(0, 0, 0, 0.1);position:fixed;top:0;width:100%;background:#fff;"},d={name:"wi2fqu",styles:"display:inline-block;flex:1;"},g={name:"yy3s1s",styles:"list-style:none;margin:0;display:flex;"},m={name:"0",styles:""},f={name:"1p0tbhj",styles:"text-decoration:none;color:#282936;&:hover{color:#ff7e5f;opacity:.8;}margin:0 1.5em;font-size:20px;"},b={name:"0",styles:""},h={name:"ojo7v7",styles:"text-decoration:none;color:#282936;&:hover{color:#ff7e5f;opacity:.8;}flex:1;font-size:20px;"},y=function(n){var a=n.siteTitle;return Object(e.b)("header",{css:u},Object(e.b)("div",{css:Object(l.a)({display:"flex",alignItems:"center",margin:"0 auto",maxWidth:1200,padding:"0 1rem",height:"100%"})},Object(e.b)(r.a,{to:"/",style:{color:"#ff7e5f",textDecoration:"none",fontSize:"33px"}},a),Object(e.b)("nav",{css:d},Object(e.b)("ul",{css:g},Object(e.b)("li",{css:m},Object(e.b)(r.a,{to:"/getting-started",css:f,activeStyle:{color:"#ff7e5f"}},"Getting Started")),Object(e.b)("li",{css:b},Object(e.b)(r.a,{to:"/docs",css:h,activeStyle:{color:"#ff7e5f"}},"Docs"))))))};y.propTypes={siteTitle:c.a.string},y.defaultProps={siteTitle:""};var k=y,v=(t(158),{name:"7gjsnz",styles:'@import url(\'https://fonts.googleapis.com/css?family=Source+Code+Pro|family=Source+Sans+Pro\');html{font:calc(1vw + 0.5em) \'Source Sans Pro\',sans-serif;box-sizing:border-box;overflow-y:scroll;color:#282936;}body{margin:0;margin-top:50px;}*{box-sizing:inherit;}*:before{box-sizing:inherit;}*:after{box-sizing:inherit;}pre{margin-left:0;margin-right:0;margin-top:0;margin-bottom:1.45rem;font-size:0.85rem;line-height:1.42;background:hsla(0,0%,0%,0.04);border-radius:3px;overflow:auto;word-wrap:normal;padding:.5rem 1rem !important;}code{font-size:0.8rem;padding:.5rem line-height:1.45rem;}code{background-color:hsla(0,0%,0%,0.04);border-radius:3px;font-family:"SFMono-Regular",Consolas,"Roboto Mono","Droid Sans Mono","Liberation Mono",Menlo,Courier,monospace;padding:0;padding-top:0.2em;padding-bottom:0.2em;}pre code{background:none;line-height:1.42;}code:before,code:after,tt:before,tt:after{letter-spacing:-0.2em;content:" ";}pre code:before,pre code:after,pre tt:before,pre tt:after{content:"";}h1{font-size:2.2rem;}h2{font-size:1.6rem;font-weight:500;margin-bottom:.6em;}'}),j=function(n){var a=n.children;return Object(e.b)(r.b,{query:"755544856",render:function(n){return Object(e.b)(i.a.Fragment,null,Object(e.b)(e.a,{styles:v}),Object(e.b)(k,{siteTitle:n.site.siteMetadata.title}),Object(e.b)("div",{style:{margin:"0 auto",maxWidth:1200,padding:"1.0875rem 1.45rem"}},Object(e.b)("main",null,a)))},data:s})};j.propTypes={children:c.a.node.isRequired};a.a=j},161:function(n){n.exports={data:{allMarkdownRemark:{edges:[{node:{frontmatter:{title:"List"},id:"9627dbb3-38af-5e1b-9b43-0c48404b2828",html:'<p>Connecting to a SharePoint List</p>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">import</span> spql <span class="token keyword">from</span> <span class="token string">\'spql\'</span>\n\n<span class="token keyword">const</span> SPSite <span class="token operator">=</span> spql<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>siteUrl<span class="token punctuation">)</span>\n<span class="token keyword">const</span> SPList <span class="token operator">=</span> SPSite<span class="token punctuation">.</span><span class="token function">List</span><span class="token punctuation">(</span>listName<span class="token operator">|</span>listGUID<span class="token punctuation">)</span></code></pre></div>\n<h2>getSchema()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">getSchema</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Object>} The List Info {id, name, sitUrl, description, createdBy, created, modified, itemCount, defaultViewUrl, isDocumentList, isHidden}</span>\n<span class="token comment">// and Field Info {displayName, staticName, description, type, isHidden, isReadOnly, isFormBaseType, ?[choice], ?{lookup}}</span></code></pre></div>\n<h2>count()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">?</span>where<span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;number>} The amount of records</span></code></pre></div>\n<p><strong>where</strong></p>\n<p>CAML (e.g. <Eq><FieldRef Name="staticName" /><Value Type="fieldType">{value}</Value></Eq>) *spql.Caml</p>\n<h2>all()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  select<span class="token punctuation">,</span>\n  orderBy<span class="token punctuation">,</span>\n  maxResults\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Array>} Record results {name: value}</span></code></pre></div>\n<p><strong>select</strong></p>\n<p>Field|[Field]</p>\n<p><strong>Field</strong></p>\n<p>fieldName|{staticName, alias, type, mapFn}</p>\n<p><strong>orderBy</strong></p>\n<p>OrderByField|[OrderByField]</p>\n<p><strong>OrderByField</strong></p>\n<p>fieldName|{staticName, isAscending}</p>\n<p><strong>maxResults</strong></p>\n<p>Limit amount of returned records</p>\n<h2>find()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  select<span class="token punctuation">,</span>\n  where<span class="token punctuation">,</span>\n  orderBy<span class="token punctuation">,</span>\n  maxResults\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Array>} Record results {name: value}</span></code></pre></div>\n<p><strong>select</strong></p>\n<p>Field|[Field]</p>\n<p><strong>Field</strong></p>\n<p>fieldName|{staticName, alias, type, mapFn}</p>\n<p><strong>where</strong></p>\n<p>CAML (e.g. <Eq><FieldRef Name="staticName" /><Value Type="fieldType">{value}</Value></Eq>) *spql.Caml</p>\n<p><strong>orderBy</strong></p>\n<p>OrderByField|[OrderByField]</p>\n<p><strong>OrderByField</strong></p>\n<p>fieldName|{staticName, isAscending}</p>\n<p><strong>maxResults</strong></p>\n<p>Limit amount of returned records</p>\n<h2>findOne()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  select<span class="token punctuation">,</span>\n  where\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;?Object>} Record result {name: value}</span></code></pre></div>\n<p><strong>select</strong></p>\n<p>Field|[Field]</p>\n<p><strong>Field</strong></p>\n<p>fieldName|{staticName, alias, type, mapFn}</p>\n<p><strong>where</strong></p>\n<p>CAML (e.g. <Eq><FieldRef Name="staticName" /><Value Type="fieldType">{value}</Value></Eq>) **spql.Caml</p>\n<h2>findById()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  id<span class="token punctuation">,</span>\n  select\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;?Object>} Record result {name: value}</span></code></pre></div>\n<p><strong>select</strong></p>\n<p>Field|[Field]</p>\n<p><strong>Field</strong></p>\n<p>fieldName|{staticName, alias, type, mapFn}</p>\n<h2>create()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>NewItem<span class="token operator">|</span><span class="token punctuation">[</span>NewItems<span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Array|Object>} Results {id, isSuccess, error}</span></code></pre></div>\n<p><strong>NewItem</strong></p>\n<p>{staticName: value}</p>\n<h2>updateById()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> Updates<span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Object>} Results {id, isSuccess, error}</span></code></pre></div>\n<p><strong>Updates</strong></p>\n<p>{staticName: value}</p>\n<h2>deleteById()</h2>\n<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">SPList<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>\n<span class="token comment">// => {Promise,&lt;Object>} Results {id, isSuccess, error}</span></code></pre></div>'}}]}}}}}]);
//# sourceMappingURL=component---src-pages-docs-list-api-js-b5460fc88e7749d851ac.js.map