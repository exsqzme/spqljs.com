{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["IndexQuery","IndexPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_6__","showHeader","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","css","_ref","_ref2","_ref3","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","_ref4","_ref5","_ref6","_emotion_css__WEBPACK_IMPORTED_MODULE_0__","margin","maxWidth","padding","query","render","data","allMarkdownRemark","edges","map","edge","i","_ref7","key","_ref8","node","frontmatter","_ref9","excerpt","_public_static_d_4100621641_json__WEBPACK_IMPORTED_MODULE_2__","StaticQueryContext","React","createContext","StaticQuery","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","SEO","description","lang","meta","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","array","arrayOf","Header","siteTitle","core_browser_esm","css_browser_esm","display","alignItems","height","gatsby_browser_entry","style","color","textDecoration","fontSize","activeStyle","Layout","react_default","Fragment","styles","header","_755544856","bool"],"mappings":"6lCAuHMA,EAAU,aAmBCC,UAnIC,kBAChBC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAQC,YAAY,GAClBH,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAAD,CAAKC,MAAM,OAAOC,SAAU,mCAC5BN,OAAAC,EAAA,EAAAD,CAAA,WAASO,IAAGC,GAWVR,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAA,MAAIO,IAAGE,GAAP,QAKAT,OAAAC,EAAA,EAAAD,CAAA,KACEO,IAAGG,GADL,mEAQAV,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAACW,EAAA,EAAD,CACEC,GAAG,mBACHL,IAAGM,GAFL,eAiBAb,OAAAC,EAAA,EAAAD,CAACW,EAAA,EAAD,CACEC,GAAG,QACHL,IAAGO,GAFL,WAmBNd,OAAAC,EAAA,EAAAD,CAAA,WACEO,IAAGQ,GAKLf,OAAAC,EAAA,EAAAD,CAAA,OACEO,IAAGP,OAAAgB,EAAA,EAAAhB,CAAE,CACHiB,OAAM,SACNC,SAAU,KACVC,QAAO,uBAGTnB,OAAAC,EAAA,EAAAD,CAACW,EAAA,EAAD,CACES,MAAOtB,EACPuB,OAAQ,SAAAC,GAAI,OAAIA,EAAKC,kBAAkBC,MAAMC,IAAI,SAACC,EAAMC,GAAP,OAC/C3B,OAAAC,EAAA,EAAAD,CAAA,WACAO,IAAGqB,EAGHC,IAAKF,GAEH3B,OAAAC,EAAA,EAAAD,CAAA,MACEO,IAAGuB,GAIFJ,EAAKK,KAAKC,YAAY3B,OAEzBL,OAAAC,EAAA,EAAAD,CAAA,KACEO,IAAG0B,GAOFP,EAAKK,KAAKG,aAxBnBZ,KAAAa,mLCzEAC,EAAqBC,IAAMC,cAAc,IAEzCC,EAAc,SAAAC,GAAK,OACvBxC,OAAAyC,EAAA,EAAAzC,CAACoC,EAAmBM,SAApB,KACG,SAAAC,GACC,OACEH,EAAMlB,MACLqB,EAAgBH,EAAMpB,QAAUuB,EAAgBH,EAAMpB,OAAOE,MAEtDkB,EAAMnB,QAAUmB,EAAMI,UAC5BJ,EAAMlB,KAAOkB,EAAMlB,KAAKA,KAAOqB,EAAgBH,EAAMpB,OAAOE,MAGvDtB,OAAAyC,EAAA,EAAAzC,CAAA,uCA4BfuC,EAAYM,UAAY,CACtBvB,KAAMwB,IAAUC,OAChB3B,MAAO0B,IAAUE,OAAOC,WACxB5B,OAAQyB,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,2KCMzCK,EAAmB,SAAAhD,GAAkB,IAAfiD,EAAejD,EAAfiD,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOxB,IAAMyB,cAAcC,IAApB/D,OAAAgE,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,oHChBf,SAASW,EAAT3D,GAA2D,IAA5C4D,EAA4C5D,EAA5C4D,YAAaC,EAA+B7D,EAA/B6D,KAAMC,EAAyB9D,EAAzB8D,KAAMhE,EAAmBE,EAAnBF,SAAUD,EAASG,EAATH,MAChD,OACEL,OAAAyC,EAAA,EAAAzC,CAACW,EAAA,EAAD,CACES,MAAOmD,EACPlD,OAAQ,SAAAC,GACN,IAAMkD,EACJJ,GAAe9C,EAAKmD,KAAKC,aAAaN,YACxC,OACEpE,OAAAyC,EAAA,EAAAzC,CAAC2E,EAAAC,EAAD,CACEC,eAAgB,CACdR,QAEFhE,MAAOA,EACPyE,cAAa,QAAUxD,EAAKmD,KAAKC,aAAarE,MAC9CiE,KAAM,CACJ,CACES,KAAI,cACJC,QAASR,GAEX,CACES,SAAQ,WACRD,QAAS3E,GAEX,CACE4E,SAAQ,iBACRD,QAASR,GAEX,CACES,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAS1D,EAAKmD,KAAKC,aAAaQ,QAElC,CACEH,KAAI,gBACJC,QAAS3E,GAEX,CACE0E,KAAI,sBACJC,QAASR,IAGVW,OACC7E,EAAS8E,OAAS,EACd,CACEL,KAAI,WACJC,QAAS1E,EAAS+E,KAAT,OAEX,IAELF,OAAOb,MAtDlBhD,KAAAgE,IA8DJnB,EAAIoB,aAAe,CACjBlB,KAAI,KACJC,KAAM,GACNhE,SAAU,IAGZ6D,EAAItB,UAAY,CACduB,YAAatB,IAAUE,OACvBqB,KAAMvB,IAAUE,OAChBsB,KAAMxB,IAAU0C,MAChBlF,SAAUwC,IAAU2C,QAAQ3C,IAAUE,QACtC3C,MAAOyC,IAAUE,OAAOC,YAGXkB,MAEf,IAAMI,EAAY,m6BCjFZmB,EAAS,SAAAlF,GAAA,IAAGmF,EAAHnF,EAAGmF,UAAH,OACb3F,OAAA4F,EAAA,EAAA5F,CAAA,UACEO,IAAGE,GASHT,OAAA4F,EAAA,EAAA5F,CAAA,OACEO,IAAGP,OAAA6F,EAAA,EAAA7F,CAAE,CACH8F,QAAS,OACTC,WAAY,SACZ9E,OAAM,SACNC,SAAU,KACVC,QAAO,SACP6E,OAAM,UAGRhG,OAAA4F,EAAA,EAAA5F,CAACiG,EAAA,EAAD,CACErF,GAAG,IACHsF,MAAO,CACLC,MAAO,UACPC,eAAc,OACdC,SAAU,SAGXV,GAEH3F,OAAA4F,EAAA,EAAA5F,CAAA,OACEO,IAAGG,GAKHV,OAAA4F,EAAA,EAAA5F,CAAA,MACEO,IAAGM,GAMHb,OAAA4F,EAAA,EAAA5F,CAAA,MACEO,IAAGO,GAIHd,OAAA4F,EAAA,EAAA5F,CAACiG,EAAA,EAAD,CACErF,GAAG,mBACHL,IAAGQ,EAUHuF,YAAa,CAACH,MAAO,YAZvB,oBAiBFnG,OAAA4F,EAAA,EAAA5F,CAAA,MAAIO,IAAGqB,GAGL5B,OAAA4F,EAAA,EAAA5F,CAACiG,EAAA,EAAD,CACErF,GAAG,QACHL,IAAGuB,EAUHwE,YAAa,CAACH,MAAO,YAZvB,cAuBZT,EAAO7C,UAAY,CACjB8C,UAAW7C,IAAUE,QAGvB0C,EAAOH,aAAe,CACpBI,UAAS,IAGID,QCjGTa,UAAS,SAAA/F,GAAA,IAAGoC,EAAHpC,EAAGoC,SAAUzC,EAAbK,EAAaL,WAAb,OACbH,OAAA4F,EAAA,EAAA5F,CAACiG,EAAA,EAAD,CACE7E,MAAK,YASLC,OAAQ,SAAAC,GAAI,OACVtB,OAAA4F,EAAA,EAAA5F,CAAAwG,EAAA5B,EAAA6B,SAAA,KACAzG,OAAA4F,EAAA,EAAA5F,CAAC4F,EAAA,EAAD,CACEc,OAAQnG,YAAF,+NAWAJ,GAAc,oBAXd,40BA2ELA,GAAcH,OAAA4F,EAAA,EAAA5F,CAAC2G,EAAD,CAAQhB,UAAWrE,EAAKmD,KAAKC,aAAarE,QACzDL,OAAA4F,EAAA,EAAA5F,CAAA,YAAO4C,KAzFbtB,KAAAsF,MA+FFL,EAAOhB,aAAe,CACpBpF,YAAY,GAGdoG,EAAO1D,UAAY,CACjBD,SAAUE,IAAUf,KAAKkB,WACzB9C,WAAY2C,IAAU+D,MAGTN","file":"component---src-pages-index-js-d229023693809ed71c0a.js","sourcesContent":["import React from \"react\"\n\nimport SEO from \"../components/seo\"\nimport {css} from \"@emotion/core\"\nimport { graphql, StaticQuery, Link } from \"gatsby\";\nimport Layout from \"../components/layout\"\n\nconst IndexPage = () => (  \n  <Layout showHeader={false}>\n    <SEO title=\"Home\" keywords={[`sharepoint`, `api`, `javscript`]} />\n    <section css={css`\n      text-align: center;      \n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n      @media (min-width: 600px) {\n        height: 100vh;\n      }\n      background: #282936;\n    `}>\n      <div>\n        <h1 css={{\n          color: '#ff7e5f',\n          fontSize: '3.2rem',\n          margin: '0'\n        }}>SPQL</h1>\n        <p\n          css={{\n            fontSize: '1.4rem',\n            margin: '.5em 0 1.6em 0',\n            color: 'white'\n          }}>\n            A lightweight, modern way of querying SharePoint's web services\n          </p>\n        <div>\n          <Link\n            to=\"/getting-started\"\n            css={{\n              padding: '.6em 1.2em',\n              border: '2px solid #ff7e5f',\n              borderRadius: '4px',\n              textDecoration: 'none',\n              color: 'white',\n              '&:hover': {\n                backgroundColor: 'rgba(255, 126, 95, 0.8)',\n                color: 'black'\n              },\n              marginRight: '1em'\n            }}\n          >\n            Get Started\n          </Link>\n          <Link\n            to=\"/docs\"\n            css={{\n              padding: '.6em 1.2em',\n              border: '2px solid #ff7e5f',\n              borderRadius: '4px',\n              textDecoration: 'none',\n              color: 'white',\n              '&:hover': {\n                backgroundColor: 'rgba(255, 126, 95, 0.8)',\n                color: 'black'\n              }              \n            }}\n          >\n            Docs\n          </Link> \n        </div>       \n      </div>\n    </section>\n    <section\n      css={{\n        padding: '3em 0',\n        background: '#fcfcfc'\n      }}\n    >\n    <div\n      css={{\n        margin: `0 auto`,\n        maxWidth: 1200,\n        padding: `1.0875rem 1.45rem`        \n      }}\n    >\n      <StaticQuery\n        query={IndexQuery}\n        render={data => data.allMarkdownRemark.edges.map((edge, i) => (\n          <article\n          css={{\n            marginBottom: '1.2em'\n          }}\n          key={i}\n          >\n            <h2\n              css={{\n                marginTop: '0',\n                fontWeight: '600'\n              }}>\n              {edge.node.frontmatter.title}\n            </h2>\n            <p\n              css={{\n                fontSize: '1rem',\n                lineHeight: '1.5rem',\n                color: '#202020',\n                margin: '0'\n              }}            \n              >\n              {edge.node.excerpt}\n            </p>\n          </article>\n        ))}\n        />   \n      </div>    \n    </section>\n  </Layout>\n)\n\nconst IndexQuery = graphql`\nquery {\n  allMarkdownRemark(\n    filter: {\n      frontmatter: {id: {eq: \"about\"}}\n    }\n    ){\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          excerpt(pruneLength: 500)\n        }\n      }\n    }\n  }\n  `\n\n  export default IndexPage","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    css={{\n      height: '50px',\n      boxShadow: 'inset 0 -1px 0 0px rgba(0, 0, 0, 0.1)',\n      position: 'fixed',\n      top: '0',\n      width: '100%',\n      background: '#fff'\n    }}\n  >\n    <div\n      css={{\n        display: 'flex',\n        alignItems: 'center',\n        margin: `0 auto`,\n        maxWidth: 1200,\n        padding: `0 1rem`,\n        height: `100%`    \n      }}\n    >\n      <Link\n        to=\"/\"\n        style={{\n          color: '#ff7e5f',\n          textDecoration: `none`,\n          fontSize: '33px'\n        }}\n      >\n        {siteTitle}\n      </Link>\n      <nav\n        css={{\n          display: 'inline-block',\n          flex: '1'\n        }}\n      >\n        <ul\n          css={{\n            listStyle: 'none',\n            margin: '0',\n            display: 'flex'\n          }}\n        >\n          <li\n            css={{\n\n            }}\n          >\n            <Link \n              to=\"/getting-started\"\n              css={{\n                textDecoration: 'none',\n                color: '#282936',\n                '&:hover': {\n                  color: '#ff7e5f',\n                  opacity: '.8'\n                },\n                margin: '0 1.5em',\n                fontSize: '20px'\n              }}\n              activeStyle={{color: '#ff7e5f'}}\n            >\n              Getting Started\n            </Link>\n          </li>\n          <li css={{\n         \n          }}>\n            <Link \n              to=\"/docs\"\n              css={{\n                textDecoration: 'none',\n                color: '#282936',\n                '&:hover': {\n                  color: '#ff7e5f',\n                  opacity: '.8'\n                },\n                flex: '1',\n                fontSize: '20px'\n              }}\n              activeStyle={{color: '#ff7e5f'}}\n            >\n              Docs\n            </Link>            \n          </li>\n        </ul>\n      </nav>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport {Global, css} from \"@emotion/core\"\nimport Header from \"./header\"\n\nimport '../../theme/prism/css/dracula-prism.css'\nconst Layout = ({ children, showHeader }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n      <Global\n        styles={css`\n        @import url('https://fonts.googleapis.com/css?family=Source+Code+Pro|family=Source+Sans+Pro');\n\n          html {\n            font: calc(1vw + 0.5em) 'Source Sans Pro', sans-serif;\n            box-sizing: border-box;\n            overflow-y: scroll;\n            color: #282936;\n          }\n          body {             \n            margin: 0;                       \n            ${showHeader && \"margin-top: 50px;\"}\n          }\n          * {\n            box-sizing: inherit;\n          }\n          *:before {\n            box-sizing: inherit;\n          }\n          *:after {\n            box-sizing: inherit;\n          }\n          pre {\n            margin-left: 0;\n            margin-right: 0;\n            margin-top: 0;\n            margin-bottom: 1.45rem;\n            font-size: 0.85rem;\n            line-height: 1.42;\n            background: hsla(0, 0%, 0%, 0.04);\n            border-radius: 3px;\n            overflow: auto;\n            word-wrap: normal;\n            padding: .5rem 1rem !important;\n          }          \n          code {\n            font-size: 0.8rem;\n            padding: .5rem\n            line-height: 1.45rem;\n          }          \n          code {\n            background-color: hsla(0, 0%, 0%, 0.04);\n            border-radius: 3px;\n            font-family: \"SFMono-Regular\", Consolas, \"Roboto Mono\", \"Droid Sans Mono\",\n              \"Liberation Mono\", Menlo, Courier, monospace;\n            padding: 0;\n            padding-top: 0.2em;\n            padding-bottom: 0.2em;\n          }\n          pre code {\n            background: none;\n            line-height: 1.42;\n          }\n          code:before,\n          code:after,\n          tt:before,\n          tt:after {\n            letter-spacing: -0.2em;\n            content: \" \";\n          }\n          pre code:before,\n          pre code:after,\n          pre tt:before,\n          pre tt:after {\n            content: \"\";\n          }\n          h1 {\n            font-size: 2.2rem;\n          }            \n          h2 {\n            font-size: 1.6rem;\n            font-weight: 500;\n            margin-bottom: .6em;\n          }                \n        `} />\n        {showHeader && <Header siteTitle={data.site.siteMetadata.title} />}\n        <main>{children}</main>\n      </>\n    )}\n  />\n)\n\nLayout.defaultProps = {\n  showHeader: true\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  showHeader: PropTypes.bool\n}\n\nexport default Layout\n"],"sourceRoot":""}